\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{} Common Imports}
\PYG{c+c1}{\PYGZsh{}Pandas for creating dataframes}
\PYG{k+kn}{import} \PYG{n+nn}{pandas} \PYG{k+kn}{as} \PYG{n+nn}{pd}
\PYG{c+c1}{\PYGZsh{}Sklearn}
\PYG{k+kn}{from} \PYG{n+nn}{sklearn} \PYG{k+kn}{import} \PYG{n}{preprocessing}
\PYG{c+c1}{\PYGZsh{}OS moduled for file oprations}
\PYG{k+kn}{import} \PYG{n+nn}{os}
\PYG{c+c1}{\PYGZsh{}CSV module}
\PYG{k+kn}{import} \PYG{n+nn}{csv}
\PYG{c+c1}{\PYGZsh{}SKlearn SVM}
\PYG{k+kn}{from} \PYG{n+nn}{sklearn} \PYG{k+kn}{import} \PYG{n}{svm}

\PYG{c+c1}{\PYGZsh{}Folder Base Path}
\PYG{n}{base\PYGZus{}path} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}converted/test2/\PYGZsq{}}

\PYG{n}{first} \PYG{o}{=} \PYG{n+nb+bp}{True}

\PYG{n}{ip\PYGZus{}dict} \PYG{o}{=} \PYG{n+nb}{dict}\PYG{p}{()}
\PYG{n}{sample\PYGZus{}path} \PYG{o}{=} \PYG{n}{base\PYGZus{}path}\PYG{o}{+}\PYG{l+s+s1}{\PYGZsq{}samples/\PYGZsq{}}
\PYG{c+c1}{\PYGZsh{}Cluster Path}
\PYG{c+c1}{\PYGZsh{}cluster\PYGZus{}path = base\PYGZus{}path+\PYGZsq{}attack\PYGZus{}ip\PYGZus{}cluster/2/\PYGZsq{}}
\PYG{n}{sample\PYGZus{}count} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
\PYG{n}{first} \PYG{o}{=} \PYG{n+nb+bp}{True}\PYG{p}{;}
\PYG{n}{dfList} \PYG{o}{=} \PYG{p}{[]}
\PYG{k}{for} \PYG{n}{filename} \PYG{o+ow}{in} \PYG{n}{os}\PYG{o}{.}\PYG{n}{listdir}\PYG{p}{(}\PYG{n}{sample\PYGZus{}path}\PYG{p}{):}
    \PYG{n}{tdf} \PYG{o}{=} \PYG{n}{pd}\PYG{o}{.}\PYG{n}{read\PYGZus{}csv}\PYG{p}{(}\PYG{n}{sample\PYGZus{}path}\PYG{o}{+}\PYG{n}{filename}\PYG{p}{,} \PYG{n}{index\PYGZus{}col}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{c+c1}{\PYGZsh{}Filter Columns}
    \PYG{n}{tdf} \PYG{o}{=} \PYG{n}{tdf}\PYG{p}{[[}\PYG{l+s+s1}{\PYGZsq{}ip.dst\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}ip.proto\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}sniff\PYGZus{}timestamp\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}sample\PYGZsq{}}\PYG{p}{]]}
    \PYG{c+c1}{\PYGZsh{}Remove null destinations}
    \PYG{n}{tdf} \PYG{o}{=} \PYG{n}{tdf}\PYG{p}{[}\PYG{n}{tdf}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}ip.dst\PYGZsq{}}\PYG{p}{]}\PYG{o}{.}\PYG{n}{notnull}\PYG{p}{()]}
    \PYG{c+c1}{\PYGZsh{}Rename Columns}
    \PYG{n}{tdf}\PYG{o}{.}\PYG{n}{columns} \PYG{o}{=} \PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}ip\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}proto\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}time\PYGZus{}stamp\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}sample\PYGZsq{}}\PYG{p}{]}
    \PYG{c+c1}{\PYGZsh{}Get count for each ip}
    \PYG{n}{df} \PYG{o}{=} \PYG{n}{tdf}\PYG{o}{.}\PYG{n}{groupby}\PYG{p}{([}\PYG{l+s+s1}{\PYGZsq{}ip\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}proto\PYGZsq{}}\PYG{p}{])}\PYG{o}{.}\PYG{n}{size}\PYG{p}{()}\PYG{o}{.}\PYG{n}{unstack}\PYG{p}{()}\PYG{o}{.}\PYG{n}{fillna}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{)}\PYG{o}{.}\PYG{n}{astype}\PYG{p}{(}\PYG{n+nb}{int}\PYG{p}{)}
    \PYG{n}{df}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}sample\PYGZsq{}}\PYG{p}{]} \PYG{o}{=} \PYG{n}{filename}
    \PYG{n}{dfList}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{df}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}Group all the flow for an IP address for SVM training algorithm.}
\PYG{n}{df1} \PYG{o}{=} \PYG{n}{pd}\PYG{o}{.}\PYG{n}{concat}\PYG{p}{(}\PYG{n}{dfList}\PYG{p}{)}\PYG{o}{.}\PYG{n}{sort\PYGZus{}index}\PYG{p}{()}
\PYG{n}{df1} \PYG{o}{=} \PYG{n}{df1}\PYG{o}{.}\PYG{n}{reset\PYGZus{}index}\PYG{p}{()}\PYG{o}{.}\PYG{n}{set\PYGZus{}index}\PYG{p}{([}\PYG{l+s+s1}{\PYGZsq{}ip\PYGZsq{}}\PYG{p}{,}\PYG{l+s+s1}{\PYGZsq{}sample\PYGZsq{}}\PYG{p}{])}
\PYG{n}{indexValues} \PYG{o}{=} \PYG{n}{df1}\PYG{o}{.}\PYG{n}{index}\PYG{o}{.}\PYG{n}{get\PYGZus{}level\PYGZus{}values}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}Use SVM to train on every destination IP}
\PYG{n}{svm\PYGZus{}dict} \PYG{o}{=} \PYG{n+nb}{dict}\PYG{p}{()}
\PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n}{indexValues}\PYG{p}{:}
    \PYG{n}{X\PYGZus{}train} \PYG{o}{=} \PYG{n}{df1}\PYG{o}{.}\PYG{n}{loc}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{o}{.}\PYG{n}{values}
    \PYG{c+c1}{\PYGZsh{} fit the model}
    \PYG{n}{clf} \PYG{o}{=} \PYG{n}{svm}\PYG{o}{.}\PYG{n}{OneClassSVM}\PYG{p}{(}\PYG{n}{nu}\PYG{o}{=}\PYG{l+m+mf}{0.1}\PYG{p}{,} \PYG{n}{kernel}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}rbf\PYGZdq{}}\PYG{p}{,} \PYG{n}{gamma}\PYG{o}{=}\PYG{l+m+mf}{0.1}\PYG{p}{)}
    \PYG{n}{clf}\PYG{o}{.}
    \PYG{n}{clf}\PYG{o}{.}\PYG{n}{fit}\PYG{p}{(}\PYG{n}{X\PYGZus{}train}\PYG{p}{)}
    \PYG{n}{svm\PYGZus{}dict}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{clf}

\PYG{c+c1}{\PYGZsh{}Predict for the give destination if it is normal or not}
\PYG{n}{svm\PYGZus{}dict}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}192.168.0.7\PYGZsq{}}\PYG{p}{]}\PYG{o}{.}\PYG{n}{predict}\PYG{p}{([[}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{]])}
\end{Verbatim}
